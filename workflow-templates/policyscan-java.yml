# Veracode Policy Scan workflow. Requires the following secrets:
# VERACODE_API_ID - https://help.veracode.com/r/t_create_api_creds
# VERACODE_API_KEY - https://help.veracode.com/r/t_create_api_creds

name: Veracode Policy Scan

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-policy-scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1 # Make java accessible on path so the uploadandscan action can run.
        with: 
          java-version: '8'

      - name: Check for Maven build
        id: check_maven
        uses: andstor/file-existence-action@v1
        with:
          files: "pom.xml"

      - name: Check for Gradle build
        id: check_gradle
        uses: andstor/file-existence-action@v1
        with:
          files: "build.gradle"

      - name: Build application with mvn
        if: steps.check_maven.outputs.files_exists == 'true'
        run: mvn -B package --file pom.xml

      - name: Build application with gradle
        if: steps.check_gradle.outputs.files_exists == 'true'
        run: gradle clean build

      - uses: actions/upload-artifact@v3 # Copy files from repository to docker container so the next uploadandscan action can access them.
        with:
          path: '**/*.[jw]ar' # Wildcards can be used to filter the files copied into the container. See: https://github.com/actions/upload-artifact
 
      - uses: veracode/veracode-uploadandscan-action@master # Run the uploadandscan action. Inputs are described above.
        with:
          appname: '${{ github.event.repository.name }}'
          filepath: '**/*.[jw]ar'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          scantimeout: 15
          createprofile: false
